openapi: '3.1.0'
info:
  title: FileStorageContextServer
  version: 0.0.0
servers:
  - url: http://{host}:{port}/file-storage-context
    variables:
      host:
        default: 127.0.0.1
      port:
        default: "13579"
        
paths:
  /quoting-context/{quotingCaseId}/{quotingContextDocumentType}:
    post:
      operationId: uploadFromQuotingContext
      parameters:
        - $ref: '#/components/parameters/quotingCaseId'
        - $ref: '#/components/parameters/quotingContextDocumentType'
        - $ref: '#/components/parameters/fileContentType'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                contentType: application/pdf, image/jpeg, image/png

      responses:
        '200':
          description: upload file successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - documentId
                properties:
                  documentId:
                    type: string
                  mediaLink:
                    type: string
        '503':
          $ref: '#/components/responses/ServiceUnavailableError'
          
  /customer-relationship-context/{customerId}/{customerRelationshipContextDocumentType}:
    post:
      operationId: uploadFromCustomerRelationshipContext
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/customerRelationshipContextDocumentType'
        - $ref: '#/components/parameters/fileContentType'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                contentType: application/pdf, image/jpeg, image/png

      responses:
        '200':
          description: upload file successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - documentId
                properties:
                  documentId:
                    type: string
                  mediaLink:
                    type: string
        '503':
          $ref: '#/components/responses/ServiceUnavailableError'
          
  /audit-context/{customerId}/{auditContextDocumentType}:
    post:
      operationId: uploadFromAuditContext
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/auditContextDocumentType'
        - $ref: '#/components/parameters/fileContentType'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                contentType: application/pdf, image/jpeg, image/png

      responses:
        '200':
          description: upload file successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - documentId
                properties:
                  documentId:
                    type: string
                  mediaLink:
                    type: string
        '503':
          $ref: '#/components/responses/ServiceUnavailableError'
                
components:
  parameters:
    quotingCaseId:
      name: quotingCaseId
      in: path
      description: quotingCase id to fetch
      required: true
      schema:
        type: string
        
    customerId:
      name: customerId
      in: path
      description: customer id to fetch
      required: true
      schema:
        type: string
        
    quotingContextDocumentType:
      name: quotingContextDocumentType
      in: path
      description: document type
      required: true
      schema:
        type: string
        enum:
          - quotingProof
          - replyForm
          
    customerRelationshipContextDocumentType:
      name: customerRelationshipContextDocumentType
      in: path
      description: document type
      required: true
      schema:
        type: string
        enum:
          - newBusinessClientRiskControlDocument
          
    auditContextDocumentType:
      name: auditContextDocumentType
      in: path
      description: document type
      required: true
      schema:
        type: string
        enum:
          - profitseekingEnterpriseAnnualIncomeTaxReturnDocument
          - businessTaxReturnDocument
          - businessClientRiskControlDocument
          - financialComplianceAuditDocument
          - taxComplianceAuditDocument
  
    fileContentType:
      name: fileContentType
      in: header
      description: file content type
      required: true
      schema:
        type: string
        enum:
          - jpeg
          - png
          - pdf

  responses:
    ServiceUnavailableError:
      description: Service Unavailable (e.g. EventStore error)
      content:
        application/json: {}
